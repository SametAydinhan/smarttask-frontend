import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { Providers } from "./providers";
import React, { PropsWithChildren } from "react";
import { readFile } from "fs/promises";
import path from "path";
import { notFound } from "next/navigation";
import { Language } from "@/lib/constants/language";

interface Props extends PropsWithChildren {
  params: {
    locale: Language;
  };
}
const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({ children, params }: Props) {
  const paramValues = await Promise.resolve(params);
  const locale = paramValues.locale || Language.EN;
  let messages;
  try {
    const filePath = path.join(
      process.cwd(),
      "src/lib/i18n/locales",
      `${locale}.json`
    );
    const file = await readFile(filePath, "utf8");
    messages = JSON.parse(file);
  } catch {
    notFound();
  }
  return (
    <html lang='en'>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
        cz-shortcut-listen='true'
      >
        <Providers locale={locale} messages={messages}>
          {children}
        </Providers>
      </body>
    </html>
  );
}
